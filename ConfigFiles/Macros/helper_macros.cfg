[gcode_macro ABSOLUTE_COORDINATES]
gcode:
    G90

[gcode_macro RELATIVE_COORDINATES]
gcode:
    G91

[gcode_macro DISPLAYTEXT]
gcode:
    {% set TEXT = params.TEXT|default("")|string %} 
    RESPOND MSG="{TEXT}"
    SET_DISPLAY_TEXT MSG="{TEXT}"

[gcode_macro DISPLAY_PROGRESS]
gcode:
    {% set TOTAL_LAYERS = params.TOTAL_LAYERS|default("")|string %} 
    {% set CURRENT_LAYER = params.CURRENT_LAYER|default("")|string %} 
    RESPOND MSG="Total layers {TOTAL_LAYERS}, current layer {CURRENT_LAYER}"
    
[gcode_macro TEMPERATURE_WAIT]
rename_existing: _TEMPERATURE_WAIT
gcode:
    {% set SENSOR = params.SENSOR|default("")|string %}
    {% set MINIMUM = params.MINIMUM|int %}
    {% set MSG = "Enclosure temperature has reached " + MINIMUM |string %}

    DISPLAYTEXT TEXT="Heatsoaking..."
    _TEMPERATURE_WAIT SENSOR="{SENSOR}" MINIMUM={MINIMUM} 
    DISPLAYTEXT TEXT="{MSG}"

[gcode_macro WAIT]
gcode:
    {% set TIME = params.TIME|default(0)|int %}
    G4 P{TIME*1000}    

[gcode_macro CHOME]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    DISPLAYTEXT TEXT="Homing.."
    G28
  {% endif %}

[gcode_macro RESET_EXTRUDER]
gcode:
    G92 E0 ; reset extruder 

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    Z_TILT_ADJUST
    G28
    G0 X75 Y75 Z30 F3600      

# [gcode_macro PARK_TOOLHEAD]
# gcode:
#     {% set th = printer.toolhead %}
#     DISPLAYTEXT TEXT="Parking"
#     G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2}
#     DISPLAYTEXT TEXT="Parked"

[gcode_macro PARK_TOOLHEAD]
gcode:
    {% set th = printer.toolhead %}
    ABSOLUTE_COORDINATES
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F15000  ; move to the center of bed    

[gcode_macro ABSOLUTE_COORDINATES]
gcode:
    G90

[gcode_macro RELATIVE_COORDINATES]
gcode:
    G91

[gcode_macro ENDING_RETRACTION]
gcode:    
     {% set RETRACT = printer["gcode_macro MACROS_VARS"].ending_length|default(0)%}
     G1 E{RETRACT*-1} F1800 

[gcode_macro PARK_AT_PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear             

[gcode_macro DUMP_VARIABLES]
gcode:
    {% set filter_name = params.NAME|default('')|string|lower %}
    {% set filter_value = params.VALUE|default('')|string|lower %}
    {% set show_cfg = params.SHOW_CFG|default(0)|int %}
    
    {% set out = [] %}

    {% for key1 in printer %}
        {% for key2 in printer[key1] %}
            {% if (show_cfg or not (key1|lower == 'configfile' and key2|lower in ['config', 'settings'])) and (filter_name in key1|lower or filter_name in key2|lower) and filter_value in printer[key1][key2]|string|lower %}
                {% set dummy = out.append("printer['%s'].%s = %s" % (key1, key2, printer[key1][key2])) %}
            {% endif %}
        {% else %}
            {% if filter_name in key1|lower and filter_value in printer[key1]|string|lower %}
                {% set dummy = out.append("printer['%s'] = %s" % (key1, printer[key1])) %}
            {% endif %}
        {% endfor %}
    {% endfor %}
    
    {action_respond_info(out|join("\n"))}    